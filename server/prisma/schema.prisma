// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String       @id @default(uuid())
  username                 String       @unique
  firstName                String
  lastName                 String
  password                 String
  phone                    String       @unique
  email                    String       @unique
  role                     Role         @default(user)
  forgetPassToken          String?
  forgetPassTokenValidTill DateTime?
  createdAt                DateTime     @default(now())
  updatedAt                DateTime     @updatedAt
  userDetail               UserDetail[]
  Product                  Product[]
  cart                     Cart?
  order                    Order[]
}

model Order {
  id           String     @id @default(uuid())
  user         User       @relation(fields: [userId], references: [id], onDelete: NoAction)
  userId       String
  product      Product[]
  userDetail   UserDetail @relation(fields: [userDetailID], references: [id])
  userDetailID String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum Role {
  admin
  seller
  user
}

model UserDetail {
  id        String   @id @default(uuid())
  street    String
  landMark  String?
  city      String
  pinCode   Int
  country   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order[]
}

model Cart {
  id        String    @id @default(uuid())
  cartPrice Decimal
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    @unique
  product   Product[]
}

model Product {
  id           String       @id @default(uuid())
  title        String
  description  String
  public       Boolean
  rating       Decimal?
  currentPrice Decimal
  marketPrice  Decimal
  brand        String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Categories   Categories[]
  image        Images[]
  size         Size[]
  Order        Order[]
  orderId      String?
  Cart         Cart[]
}

model Categories {
  id       String    @id @default(uuid())
  category String
  product  Product[]
}

model Images {
  id        String   @id @default(uuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id        String  @id @default(uuid())
  size      Sizes
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

enum Sizes {
  XL
  L
  M
  S
  XS
}
